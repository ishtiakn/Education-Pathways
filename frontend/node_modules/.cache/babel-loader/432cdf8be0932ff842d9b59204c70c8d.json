{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nissa\\\\Desktop\\\\SKULE\\\\4th Year\\\\ECE444\\\\code\\\\OFFICIAL\\\\project-1-web-application-design-education-pathways-group-1-agility\\\\Education_Pathways\\\\frontend\\\\src\\\\components\\\\ResultDisplay.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"../axiosInstance/AxiosInstance\";\nimport Result from \"./Results\";\nimport Spinner from \"./Spinner\";\nimport \"./css/Result.css\";\nimport Label from \"./Label\";\nimport \"./css/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getDropdownValues(s) {\n  let dropdownValues = [];\n\n  try {\n    let res = await axios.get('/courses/'.concat(s));\n    dropdownValues = res.data;\n  } catch (error) {\n    dropdownValues = [\"Error. Failed to retrieve dropdown values\"];\n  }\n\n  return dropdownValues;\n}\n\n;\n\nfunction arrayDictNumbers(minVal, maxVal) {\n  let arr_dict = [];\n\n  for (var i = minVal; i <= maxVal; i++) {\n    arr_dict.push({\n      value: i.toString(),\n      text: i.toString()\n    });\n  }\n\n  ;\n  return arr_dict;\n}\n\nclass SearchResultDisplay extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      const value = event.target.value;\n      this.setState({\n        [event.target.name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.getData(this.state.input);\n    };\n\n    this.getData = input => {\n      this.setState({\n        dispSpinner: true\n      }); //Construct the API Get Request\n\n      let getRequestURL = \"/courses?search=\"; //${input}`\n\n      if (this.state.input !== \"\") {\n        getRequestURL = getRequestURL.concat(this.state.input.replace(/&/g, \"%26\"));\n      }\n\n      if (this.state.faculty !== \"\") {\n        getRequestURL = getRequestURL.concat(\"&faculty=\").concat(this.state.faculty.replace(/&/g, \"%26\"));\n      }\n\n      if (this.state.department !== \"\") {\n        getRequestURL = getRequestURL.concat(\"&department=\").concat(this.state.department.replace(/&/g, \"%26\"));\n      }\n\n      if (this.state.minLevel !== \"\") {\n        getRequestURL = getRequestURL.concat(\"&minLevel=\").concat(this.state.minLevel);\n      }\n\n      if (this.state.maxLevel !== \"\") {\n        getRequestURL = getRequestURL.concat(\"&maxLevel=\").concat(this.state.maxLevel);\n      }\n\n      console.log(getRequestURL); //Call the API\n\n      axios.get(getRequestURL).then(res => {\n        if (res.status === 200) {\n          this.setState({\n            results: []\n          });\n          console.log(res.data);\n\n          if (res.data.length > 0) {\n            let len = res.data.length;\n            let result_temp = [];\n            result_temp.push( /*#__PURE__*/_jsxDEV(Label, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 28\n            }, this));\n\n            for (let i = 0; i < len; i++) {\n              result_temp.push( /*#__PURE__*/_jsxDEV(Result, {\n                course_id: res.data[i]._id,\n                course_code: res.data[i].Code,\n                course_name: res.data[i].Name,\n                course_faculty: res.data[i].Faculty,\n                course_department: res.data[i].Department\n              }, res.data[i]._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 15\n              }, this));\n            }\n\n            this.setState({\n              results: result_temp\n            });\n          } else {\n            alert(\"Course not found\");\n          }\n        } else if (res.status === 500) {\n          alert(\"System Error. Please refresh\");\n        }\n\n        this.setState({\n          dispSpinner: false\n        });\n      });\n    };\n\n    this.state = {\n      campuses: [],\n      faculties: [],\n      departments: [],\n      input: \"\",\n      faculty: \"\",\n      department: \"\",\n      minLevel: -1,\n      maxLevel: -1,\n      dispSpinner: false,\n      results: []\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      dispSpinner: true\n    });\n    let arr = await getDropdownValues('faculties');\n    let arr_dict = [];\n\n    for (var i = 0; i < arr.length; i++) {\n      arr_dict.push({\n        value: arr[i],\n        text: arr[i]\n      });\n    }\n\n    this.setState({\n      faculties: arr_dict\n    });\n    arr = await getDropdownValues('departments');\n    arr_dict = [];\n\n    for (i = 0; i < arr.length; i++) {\n      arr_dict.push({\n        value: arr[i],\n        text: arr[i]\n      });\n    }\n\n    this.setState({\n      departments: arr_dict\n    });\n    this.setState({\n      dispSpinner: false\n    });\n  }\n\n  render() {\n    return this.state.dispSpinner ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchQuery\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"10%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Education Pathways\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          className: \"search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search for courses by code, title, keyword...\",\n            className: \"text-input\",\n            type: \"text\",\n            name: \"input\",\n            value: this.state.input,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Search\",\n            className: \"submit-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"faculty\",\n            children: \"Faculty:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"faculty\",\n            onChange: this.handleChange,\n            value: this.state.faculty,\n            className: \"dropdown\",\n            id: \"faculty\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              className: \"dropdown\",\n              selected: \"selected\",\n              children: \"any\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), this.state.faculties.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              className: \"dropdown\",\n              children: option.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"department\",\n            children: \"Department:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"department\",\n            onChange: this.handleChange,\n            value: this.state.department,\n            className: \"dropdown\",\n            id: \"department\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              className: \"dropdown\",\n              selected: \"selected\",\n              children: \"any\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), this.state.departments.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              className: \"dropdown\",\n              children: option.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"minLevel\",\n            children: \"Min. Level:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"minLevel\",\n            onChange: this.handleChange,\n            value: this.state.minLevel,\n            className: \"dropdown\",\n            id: \"minLevel\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              className: \"dropdown\",\n              selected: \"selected\",\n              children: \"none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), arrayDictNumbers(0, 7).map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              className: \"dropdown\",\n              children: option.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"maxLevel\",\n            children: \"Max. Level:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"maxLevel\",\n            onChange: this.handleChange,\n            value: this.state.maxLevel,\n            className: \"dropdown\",\n            id: \"maxLevel\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              className: \"dropdown\",\n              selected: \"selected\",\n              children: \"none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), arrayDictNumbers(0, 7).map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              className: \"dropdown\",\n              children: option.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-result-display\",\n        children: this.state.results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SearchResultDisplay;","map":{"version":3,"sources":["C:/Users/nissa/Desktop/SKULE/4th Year/ECE444/code/OFFICIAL/project-1-web-application-design-education-pathways-group-1-agility/Education_Pathways/frontend/src/components/ResultDisplay.jsx"],"names":["React","Component","axios","Result","Spinner","Label","getDropdownValues","s","dropdownValues","res","get","concat","data","error","arrayDictNumbers","minVal","maxVal","arr_dict","i","push","value","toString","text","SearchResultDisplay","constructor","handleChange","event","target","setState","name","handleSubmit","preventDefault","getData","state","input","dispSpinner","getRequestURL","replace","faculty","department","minLevel","maxLevel","console","log","then","status","results","length","len","result_temp","_id","Code","Name","Faculty","Department","alert","campuses","faculties","departments","componentDidMount","arr","render","marginTop","map","option","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"../axiosInstance/AxiosInstance\";\r\nimport Result from \"./Results\";\r\nimport Spinner from \"./Spinner\";\r\nimport \"./css/Result.css\";\r\nimport Label from \"./Label\";\r\nimport \"./css/styles.css\";\r\n\r\nasync function getDropdownValues(s) {\r\n  let dropdownValues = []\r\n  try{\r\n    let res = await axios.get('/courses/'.concat(s));\r\n    dropdownValues = res.data;\r\n  }catch(error){\r\n    dropdownValues = [\"Error. Failed to retrieve dropdown values\"];\r\n  }\r\n  return dropdownValues;\r\n};\r\n\r\nfunction arrayDictNumbers(minVal, maxVal){\r\n  let arr_dict = [];\r\n  for (var i=minVal; i<=maxVal; i++){\r\n    arr_dict.push({value: i.toString(), text: i.toString()})\r\n  };\r\n  return arr_dict;\r\n}\r\n\r\nclass SearchResultDisplay extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      campuses: [],\r\n      faculties: [],\r\n      departments: [],\r\n      input: \"\",\r\n      faculty: \"\",\r\n      department: \"\",\r\n      minLevel: -1,\r\n      maxLevel: -1,\r\n      dispSpinner: false,\r\n      results: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount(){\r\n    this.setState({ dispSpinner: true});\r\n\r\n    let arr = await getDropdownValues('faculties')\r\n    let arr_dict = []\r\n    for (var i=0; i<arr.length; i++){\r\n      arr_dict.push({value: arr[i], text: arr[i]})\r\n    }\r\n    this.setState({ faculties: arr_dict})\r\n\r\n    arr = await getDropdownValues('departments')\r\n    arr_dict = []\r\n    for (i=0; i<arr.length; i++){\r\n      arr_dict.push({value: arr[i], text: arr[i]})\r\n    }\r\n    this.setState({ departments: arr_dict})\r\n\r\n    this.setState({ dispSpinner: false});\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({[event.target.name] : value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.getData(this.state.input);\r\n  };\r\n\r\n  getData = (input) => {\r\n    this.setState({ dispSpinner: true});\r\n    //Construct the API Get Request\r\n    let getRequestURL = \"/courses?search=\"//${input}`\r\n    if (this.state.input !== \"\"){\r\n      getRequestURL = getRequestURL.concat(this.state.input.replace(/&/g, \"%26\"));\r\n    }\r\n    if (this.state.faculty !== \"\"){\r\n      getRequestURL = getRequestURL.concat(\"&faculty=\").concat(this.state.faculty.replace(/&/g, \"%26\"));\r\n    }\r\n    if (this.state.department !== \"\"){\r\n      getRequestURL = getRequestURL.concat(\"&department=\").concat(this.state.department.replace(/&/g, \"%26\"));\r\n    }\r\n    if (this.state.minLevel !== \"\"){\r\n      getRequestURL = getRequestURL.concat(\"&minLevel=\").concat(this.state.minLevel);\r\n    }\r\n    if (this.state.maxLevel !== \"\"){\r\n      getRequestURL = getRequestURL.concat(\"&maxLevel=\").concat(this.state.maxLevel);\r\n    }\r\n    \r\n    console.log(getRequestURL)\r\n    //Call the API\r\n    axios.get(getRequestURL).then((res) => {\r\n      if (res.status === 200) {\r\n        this.setState({ results: [] });\r\n        console.log(res.data);\r\n        if (res.data.length > 0) {\r\n          let len = res.data.length;\r\n          let result_temp = [];\r\n          result_temp.push(<Label></Label>);\r\n          for (let i = 0; i < len; i++) {\r\n            result_temp.push(\r\n              <Result\r\n                key={res.data[i]._id}\r\n                course_id={res.data[i]._id}\r\n                course_code={res.data[i].Code}\r\n                course_name={res.data[i].Name}\r\n                course_faculty={res.data[i].Faculty}\r\n                course_department={res.data[i].Department}\r\n              ></Result>\r\n            );\r\n          }\r\n          this.setState({ results: result_temp });\r\n        } else {\r\n          alert(\"Course not found\");\r\n        }\r\n      } else if (res.status === 500) {\r\n        alert(\"System Error. Please refresh\");\r\n      }\r\n      this.setState({dispSpinner: false});\r\n    });\r\n  };\r\n  \r\n  render() {\r\n    return this.state.dispSpinner ? (\r\n      <Spinner />\r\n    ) : (\r\n      <div className=\"SearchQuery\">\r\n        <div style={{ marginTop: \"10%\" }}>\r\n          <h1> Education Pathways</h1>\r\n          <br></br>\r\n          <form onSubmit={this.handleSubmit} className={\"search\"}>\r\n            <input\r\n              placeholder={\"Search for courses by code, title, keyword...\"}\r\n              className={\"text-input\"}\r\n              type=\"text\"\r\n              name=\"input\"\r\n              value={this.state.input}\r\n              onChange={this.handleChange}\r\n            />\r\n            <input type=\"submit\" value=\"Search\" className={\"submit-button\"} />\r\n            <br></br><br></br>            \r\n            <label for=\"faculty\">Faculty:</label>\r\n            <select name=\"faculty\" onChange={this.handleChange} value={this.state.faculty} className={\"dropdown\"} id=\"faculty\">\r\n              <option value=\"\" className={\"dropdown\"} selected=\"selected\">any</option>\r\n              {this.state.faculties.map((option, index) => (\r\n                <option key={index} value={option.value} className={\"dropdown\"}>\r\n                  {option.text}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br></br><br></br>\r\n            <label for=\"department\">Department:</label>\r\n            <select name=\"department\" onChange={this.handleChange} value={this.state.department} className={\"dropdown\"} id=\"department\">\r\n              <option value=\"\" className={\"dropdown\"} selected=\"selected\">any</option>\r\n              {this.state.departments.map((option, index) => (\r\n                <option key={index} value={option.value} className={\"dropdown\"}>\r\n                  {option.text}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br></br><br></br>\r\n            <label for=\"minLevel\">Min. Level:</label>\r\n            <select name=\"minLevel\" onChange={this.handleChange} value={this.state.minLevel} className={\"dropdown\"} id=\"minLevel\">\r\n              <option value=\"\" className={\"dropdown\"} selected=\"selected\">none</option>\r\n              {arrayDictNumbers(0, 7).map((option, index) => (\r\n                <option key={index} value={option.value} className={\"dropdown\"}>\r\n                  {option.text}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b>\r\n            <label for=\"maxLevel\">Max. Level:</label>\r\n            <select name=\"maxLevel\" onChange={this.handleChange} value={this.state.maxLevel} className={\"dropdown\"} id=\"maxLevel\">\r\n              <option value=\"\" className={\"dropdown\"} selected=\"selected\">none</option>\r\n              {arrayDictNumbers(0, 7).map((option, index) => (\r\n                <option key={index} value={option.value} className={\"dropdown\"}>\r\n                  {option.text}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </form>\r\n        </div>\r\n        <div className={\"search-result-display\"}>{this.state.results}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResultDisplay;"]},"metadata":{},"sourceType":"module"}