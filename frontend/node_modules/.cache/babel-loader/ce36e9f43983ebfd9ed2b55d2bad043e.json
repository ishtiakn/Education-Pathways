{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nissa\\\\Desktop\\\\SKULE\\\\4th Year\\\\ECE444\\\\code\\\\project-1-web-application-design-education-pathways-group-1-agility\\\\Education_Pathways\\\\frontend\\\\src\\\\components\\\\SearchCompare.js\";\nimport React, { Component } from \"react\";\nimport axios from \"../axiosInstance/AxiosInstance\";\nimport Spinner from \"./Spinner\";\nimport \"./css/Result.css\";\nimport Label from \"./Label\";\nimport \"./css/styles.css\";\nimport ResultCompare from \"./ResultCompare\"; //Returns an array of unique values for the given database attribute, s\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getDropdownValues(s) {\n  let dropdownValues = [];\n\n  try {\n    let res = await axios.get(\"/courses/\".concat(s));\n    dropdownValues = res.data;\n  } catch (error) {\n    dropdownValues = [\"Error. Failed to retrieve dropdown values\"];\n  }\n\n  return dropdownValues;\n} // Returns An array of dictionaries for numerical dropdown values  Used for\n// minLevel and maxLevel dropdowns\n\n\nfunction arrayDictNumbers(minVal, maxVal) {\n  let arr_dict = [];\n\n  for (var i = minVal; i <= maxVal; i++) {\n    arr_dict.push({\n      value: i.toString(),\n      text: i.toString()\n    });\n  }\n\n  return arr_dict;\n} // The primary component of this file. Allows users to search, filter, and\n// access results\n\n\nclass SearchBarCompare extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      const value = event.target.value;\n      this.setState({\n        [event.target.name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.getData();\n    };\n\n    this.getData = () => {\n      this.setState({\n        dispSpinner: true\n      }); //Construct the API Get Request from search term and filters\n\n      let getRequestURL = \"/courses?search=\";\n\n      if (this.state.input !== \"\") {\n        getRequestURL = getRequestURL.concat(this.state.input.replaceAll(\"&\", \"%26\").replaceAll(\"/\", \"%2F\").replaceAll(\"=\", \"%3D\").replaceAll(\"?\", \"%3F\"));\n      }\n\n      if (this.state.faculty !== \"\") {\n        getRequestURL = getRequestURL.concat(\"&faculty=\").concat(this.state.faculty.replaceAll(\"&\", \"%26\").replaceAll(\"/\", \"%2F\").replaceAll(\"=\", \"%3D\").replaceAll(\"?\", \"%3F\"));\n      }\n\n      if (this.state.department !== \"\") {\n        getRequestURL = getRequestURL.concat(\"&department=\").concat(this.state.department.replaceAll(\"&\", \"%26\").replaceAll(\"/\", \"%2F\").replaceAll(\"=\", \"%3D\").replaceAll(\"?\", \"%3F\"));\n      }\n\n      if (this.state.minLevel !== \"none\") {\n        getRequestURL = getRequestURL.concat(\"&minLevel=\").concat(this.state.minLevel);\n      }\n\n      if (this.state.maxLevel !== \"none\") {\n        getRequestURL = getRequestURL.concat(\"&maxLevel=\").concat(this.state.maxLevel);\n      } //Do not call API if user enters no params\n\n\n      if (getRequestURL === \"/courses?search=\") {\n        let result_temp = [];\n        result_temp.push( /*#__PURE__*/_jsxDEV(ResultCompare, {\n          course_id: \"\",\n          course_code: \"NO_PARAMS_ENTERED\",\n          course_name: \"\",\n          course_faculty: \"\",\n          course_department: \"\"\n        }, \"\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this));\n        this.setState({\n          results: result_temp\n        });\n        this.setState({\n          dispSpinner: false\n        });\n      } //Call API with the get request\n      else {\n        axios.get(getRequestURL).then(res => {\n          if (res.status === 200) {\n            this.setState({\n              results: []\n            });\n            console.log(res.data);\n\n            if (res.data.length > 0) {\n              let len = res.data.length;\n              let result_temp = [];\n              result_temp.push( /*#__PURE__*/_jsxDEV(Label, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 32\n              }, this));\n\n              for (let i = 0; i < len; i++) {\n                result_temp.push( /*#__PURE__*/_jsxDEV(ResultCompare, {\n                  course_id: res.data[i]._id,\n                  course_code: res.data[i].Code,\n                  course_name: res.data[i].Name,\n                  course_faculty: res.data[i].Faculty,\n                  course_department: res.data[i].Department,\n                  course_description: res.data[i][\"Course Description\"],\n                  course_pre: res.data[i][\"Pre-requisites\"],\n                  setCourse: this.props.setCourse,\n                  course1: this.props.course1,\n                  course2: this.props.course2\n                }, res.data[i]._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this));\n              }\n\n              this.setState({\n                results: result_temp\n              });\n            } else {\n              alert(\"Course not found\");\n            }\n          } else if (res.status === 500) {\n            alert(\"System Error. Please refresh\");\n          }\n\n          this.setState({\n            dispSpinner: false\n          });\n        }).catch(() => {\n          let result_temp = [];\n          result_temp.push( /*#__PURE__*/_jsxDEV(ResultCompare, {\n            course_id: \"\",\n            course_code: \"No results found.\",\n            course_name: \"\",\n            course_faculty: \"\",\n            course_department: \"\"\n          }, 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this));\n          this.setState({\n            results: result_temp\n          });\n          this.setState({\n            dispSpinner: false\n          });\n        });\n      }\n    };\n\n    this.state = {\n      //Dropdown values\n      faculties: [],\n      departments: [],\n      //Query params\n      input: \"\",\n      faculty: \"\",\n      department: \"\",\n      minLevel: \"none\",\n      maxLevel: \"none\",\n      //Show loading animation when True\n      dispSpinner: false,\n      //Query results\n      results: []\n    };\n  } // Get  drodown values from DB before rendering page\n\n\n  async componentDidMount() {\n    this.setState({\n      dispSpinner: true\n    }); //Need array of dictionaries to populate dropdown calues\n\n    let arr = await getDropdownValues(\"faculties\");\n    let arr_dict = [];\n\n    for (var i = 0; i < arr.length; i++) {\n      arr_dict.push({\n        value: arr[i],\n        text: arr[i]\n      });\n    }\n\n    this.setState({\n      faculties: arr_dict\n    });\n    arr = await getDropdownValues(\"departments\");\n    arr_dict = [];\n\n    for (i = 0; i < arr.length; i++) {\n      arr_dict.push({\n        value: arr[i],\n        text: arr[i]\n      });\n    }\n\n    this.setState({\n      departments: arr_dict\n    });\n    this.setState({\n      dispSpinner: false\n    });\n  }\n\n  render() {\n    return this.state.dispSpinner ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchQuery\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          className: \"search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Enter a course code, title, keyword...\",\n            className: \"text-input\",\n            type: \"text\",\n            name: \"input\",\n            value: this.state.input,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Search\",\n            className: \"submit-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"faculty\",\n            children: \"Faculty:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"faculty\",\n            onChange: this.handleChange,\n            value: this.state.faculty,\n            className: \"dropdown\",\n            id: \"faculty\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              className: \"dropdown\",\n              selected: \"selected\",\n              children: \"any\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), this.state.faculties.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              className: \"dropdown\",\n              children: option.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"department\",\n            children: \"Department:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"department\",\n            onChange: this.handleChange,\n            value: this.state.department,\n            className: \"dropdown\",\n            id: \"department\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              className: \"dropdown\",\n              selected: \"selected\",\n              children: \"any\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), this.state.departments.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              className: \"dropdown\",\n              children: option.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"minLevel\",\n            children: \"Min. Level:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"minLevel\",\n            onChange: this.handleChange,\n            value: this.state.minLevel,\n            className: \"dropdown\",\n            id: \"minLevel\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              className: \"dropdown\",\n              selected: \"selected\",\n              children: \"none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), arrayDictNumbers(0, 7).map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              className: \"dropdown\",\n              children: option.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"maxLevel\",\n            children: \"Max. Level:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"maxLevel\",\n            onChange: this.handleChange,\n            value: this.state.maxLevel,\n            className: \"dropdown\",\n            id: \"maxLevel\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              className: \"dropdown\",\n              selected: \"selected\",\n              children: \"none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), arrayDictNumbers(0, 7).map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              className: \"dropdown\",\n              children: option.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-result-display\",\n        children: this.state.results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SearchBarCompare;","map":{"version":3,"sources":["C:/Users/nissa/Desktop/SKULE/4th Year/ECE444/code/project-1-web-application-design-education-pathways-group-1-agility/Education_Pathways/frontend/src/components/SearchCompare.js"],"names":["React","Component","axios","Spinner","Label","ResultCompare","getDropdownValues","s","dropdownValues","res","get","concat","data","error","arrayDictNumbers","minVal","maxVal","arr_dict","i","push","value","toString","text","SearchBarCompare","constructor","handleChange","event","target","setState","name","handleSubmit","preventDefault","getData","dispSpinner","getRequestURL","state","input","replaceAll","faculty","department","minLevel","maxLevel","result_temp","results","then","status","console","log","length","len","_id","Code","Name","Faculty","Department","props","setCourse","course1","course2","alert","catch","faculties","departments","componentDidMount","arr","render","map","option","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"../axiosInstance/AxiosInstance\";\r\nimport Spinner from \"./Spinner\";\r\nimport \"./css/Result.css\";\r\nimport Label from \"./Label\";\r\nimport \"./css/styles.css\";\r\nimport ResultCompare from \"./ResultCompare\";\r\n\r\n//Returns an array of unique values for the given database attribute, s\r\nasync function getDropdownValues(s) {\r\n  let dropdownValues = [];\r\n  try {\r\n    let res = await axios.get(\"/courses/\".concat(s));\r\n    dropdownValues = res.data;\r\n  } catch (error) {\r\n    dropdownValues = [\"Error. Failed to retrieve dropdown values\"];\r\n  }\r\n  return dropdownValues;\r\n}\r\n\r\n// Returns An array of dictionaries for numerical dropdown values  Used for\r\n// minLevel and maxLevel dropdowns\r\nfunction arrayDictNumbers(minVal, maxVal) {\r\n  let arr_dict = [];\r\n  for (var i = minVal; i <= maxVal; i++) {\r\n    arr_dict.push({ value: i.toString(), text: i.toString() });\r\n  }\r\n  return arr_dict;\r\n}\r\n\r\n// The primary component of this file. Allows users to search, filter, and\r\n// access results\r\nclass SearchBarCompare extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      //Dropdown values\r\n      faculties: [],\r\n      departments: [],\r\n      //Query params\r\n      input: \"\",\r\n      faculty: \"\",\r\n      department: \"\",\r\n      minLevel: \"none\",\r\n      maxLevel: \"none\",\r\n      //Show loading animation when True\r\n      dispSpinner: false,\r\n      //Query results\r\n      results: [],\r\n    };\r\n  }\r\n\r\n  // Get  drodown values from DB before rendering page\r\n  async componentDidMount() {\r\n    this.setState({ dispSpinner: true });\r\n\r\n    //Need array of dictionaries to populate dropdown calues\r\n    let arr = await getDropdownValues(\"faculties\");\r\n    let arr_dict = [];\r\n    for (var i = 0; i < arr.length; i++) {\r\n      arr_dict.push({ value: arr[i], text: arr[i] });\r\n    }\r\n    this.setState({ faculties: arr_dict });\r\n    arr = await getDropdownValues(\"departments\");\r\n    arr_dict = [];\r\n    for (i = 0; i < arr.length; i++) {\r\n      arr_dict.push({ value: arr[i], text: arr[i] });\r\n    }\r\n    this.setState({ departments: arr_dict });\r\n\r\n    this.setState({ dispSpinner: false });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [event.target.name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.getData();\r\n  };\r\n\r\n  getData = () => {\r\n    this.setState({ dispSpinner: true });\r\n    //Construct the API Get Request from search term and filters\r\n    let getRequestURL = \"/courses?search=\";\r\n    if (this.state.input !== \"\") {\r\n      getRequestURL = getRequestURL.concat(\r\n        this.state.input\r\n          .replaceAll(\"&\", \"%26\")\r\n          .replaceAll(\"/\", \"%2F\")\r\n          .replaceAll(\"=\", \"%3D\")\r\n          .replaceAll(\"?\", \"%3F\")\r\n      );\r\n    }\r\n    if (this.state.faculty !== \"\") {\r\n      getRequestURL = getRequestURL\r\n        .concat(\"&faculty=\")\r\n        .concat(\r\n          this.state.faculty\r\n            .replaceAll(\"&\", \"%26\")\r\n            .replaceAll(\"/\", \"%2F\")\r\n            .replaceAll(\"=\", \"%3D\")\r\n            .replaceAll(\"?\", \"%3F\")\r\n        );\r\n    }\r\n    if (this.state.department !== \"\") {\r\n      getRequestURL = getRequestURL\r\n        .concat(\"&department=\")\r\n        .concat(\r\n          this.state.department\r\n            .replaceAll(\"&\", \"%26\")\r\n            .replaceAll(\"/\", \"%2F\")\r\n            .replaceAll(\"=\", \"%3D\")\r\n            .replaceAll(\"?\", \"%3F\")\r\n        );\r\n    }\r\n    if (this.state.minLevel !== \"none\") {\r\n      getRequestURL = getRequestURL\r\n        .concat(\"&minLevel=\")\r\n        .concat(this.state.minLevel);\r\n    }\r\n    if (this.state.maxLevel !== \"none\") {\r\n      getRequestURL = getRequestURL\r\n        .concat(\"&maxLevel=\")\r\n        .concat(this.state.maxLevel);\r\n    }\r\n\r\n    //Do not call API if user enters no params\r\n    if (getRequestURL === \"/courses?search=\") {\r\n      let result_temp = [];\r\n      result_temp.push(\r\n        <ResultCompare\r\n          key={\"\"}\r\n          course_id={\"\"}\r\n          course_code={\"NO_PARAMS_ENTERED\"}\r\n          course_name={\"\"}\r\n          course_faculty={\"\"}\r\n          course_department={\"\"}\r\n        ></ResultCompare>\r\n      );\r\n      this.setState({ results: result_temp });\r\n      this.setState({ dispSpinner: false });\r\n    }\r\n    //Call API with the get request\r\n    else {\r\n      axios\r\n        .get(getRequestURL)\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            this.setState({ results: [] });\r\n            console.log(res.data);\r\n            if (res.data.length > 0) {\r\n              let len = res.data.length;\r\n              let result_temp = [];\r\n              result_temp.push(<Label></Label>);\r\n              for (let i = 0; i < len; i++) {\r\n                result_temp.push(\r\n                  <ResultCompare\r\n                    key={res.data[i]._id}\r\n                    course_id={res.data[i]._id}\r\n                    course_code={res.data[i].Code}\r\n                    course_name={res.data[i].Name}\r\n                    course_faculty={res.data[i].Faculty}\r\n                    course_department={res.data[i].Department}\r\n                    course_description={res.data[i][\"Course Description\"]}\r\n                    course_pre={res.data[i][\"Pre-requisites\"]}\r\n                    setCourse={this.props.setCourse}\r\n                    course1={this.props.course1}\r\n                    course2={this.props.course2}\r\n                  ></ResultCompare>\r\n                );\r\n              }\r\n              this.setState({ results: result_temp });\r\n            } else {\r\n              alert(\"Course not found\");\r\n            }\r\n          } else if (res.status === 500) {\r\n            alert(\"System Error. Please refresh\");\r\n          }\r\n          this.setState({ dispSpinner: false });\r\n        })\r\n        .catch(() => {\r\n          let result_temp = [];\r\n          result_temp.push(\r\n            <ResultCompare\r\n              key={1}\r\n              course_id={\"\"}\r\n              course_code={\"No results found.\"}\r\n              course_name={\"\"}\r\n              course_faculty={\"\"}\r\n              course_department={\"\"}\r\n            ></ResultCompare>\r\n          );\r\n          this.setState({ results: result_temp });\r\n          this.setState({ dispSpinner: false });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.state.dispSpinner ? (\r\n      <Spinner />\r\n    ) : (\r\n      <div className=\"SearchQuery\">\r\n        <div>\r\n          <form onSubmit={this.handleSubmit} className={\"search\"}>\r\n            <input\r\n              placeholder={\"Enter a course code, title, keyword...\"}\r\n              className={\"text-input\"}\r\n              type=\"text\"\r\n              name=\"input\"\r\n              value={this.state.input}\r\n              onChange={this.handleChange}\r\n            />\r\n            <input type=\"submit\" value=\"Search\" className={\"submit-button\"} />\r\n            <br></br>\r\n            <br></br>\r\n            <label for=\"faculty\">Faculty:</label>\r\n            <select\r\n              name=\"faculty\"\r\n              onChange={this.handleChange}\r\n              value={this.state.faculty}\r\n              className={\"dropdown\"}\r\n              id=\"faculty\"\r\n            >\r\n              <option value=\"\" className={\"dropdown\"} selected=\"selected\">\r\n                any\r\n              </option>\r\n              {this.state.faculties.map((option, index) => (\r\n                <option key={index} value={option.value} className={\"dropdown\"}>\r\n                  {option.text}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br></br>\r\n            <br></br>\r\n            <label for=\"department\">Department:</label>\r\n            <select\r\n              name=\"department\"\r\n              onChange={this.handleChange}\r\n              value={this.state.department}\r\n              className={\"dropdown\"}\r\n              id=\"department\"\r\n            >\r\n              <option value=\"\" className={\"dropdown\"} selected=\"selected\">\r\n                any\r\n              </option>\r\n              {this.state.departments.map((option, index) => (\r\n                <option key={index} value={option.value} className={\"dropdown\"}>\r\n                  {option.text}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br></br>\r\n            <br></br>\r\n            <label for=\"minLevel\">Min. Level:</label>\r\n            <select\r\n              name=\"minLevel\"\r\n              onChange={this.handleChange}\r\n              value={this.state.minLevel}\r\n              className={\"dropdown\"}\r\n              id=\"minLevel\"\r\n            >\r\n              <option value=\"none\" className={\"dropdown\"} selected=\"selected\">\r\n                none\r\n              </option>\r\n              {arrayDictNumbers(0, 7).map((option, index) => (\r\n                <option key={index} value={option.value} className={\"dropdown\"}>\r\n                  {option.text}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b>\r\n            <label for=\"maxLevel\">Max. Level:</label>\r\n            <select\r\n              name=\"maxLevel\"\r\n              onChange={this.handleChange}\r\n              value={this.state.maxLevel}\r\n              className={\"dropdown\"}\r\n              id=\"maxLevel\"\r\n            >\r\n              <option value=\"none\" className={\"dropdown\"} selected=\"selected\">\r\n                none\r\n              </option>\r\n              {arrayDictNumbers(0, 7).map((option, index) => (\r\n                <option key={index} value={option.value} className={\"dropdown\"}>\r\n                  {option.text}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </form>\r\n        </div>\r\n        <div className={\"search-result-display\"}>{this.state.results}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBarCompare;\r\n"]},"metadata":{},"sourceType":"module"}